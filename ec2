provider "aws" {
  region = "us-east-1"
}

resource "aws_instance" "example" {
  ami           = "ami-0c55b159cbfafe1f0"  # replace with your AMI ID
  instance_type = "t3.micro"
  key_name      = "your-key-pair"          # replace with your key pair

  # Use existing network interface
  network_interface {
    network_interface_id = "eni-0123456789abcdef0"  # replace with your ENI ID
    device_index         = 0
  }

  # Root volume specification
  root_block_device {
    volume_size = 20  # in GB
    volume_type = "gp3"
    delete_on_termination = true
  }

  # Inline user data (bash script)
  user_data = <<-EOF
              #!/bin/bash
              echo "Hello from user data!" > /var/tmp/hello.txt
              EOF

  tags = {
    Name = "example-ec2-instance"
  }
}

# Reference existing IAM role
data "aws_iam_role" "existing_role" {
  name = "my-existing-iam-role-name"  # Replace with your IAM role name
}

# Create instance profile for the existing IAM role
resource "aws_iam_instance_profile" "this" {
  name = "my-instance-profile"
  role = data.aws_iam_role.existing_role.name
}


resource "aws_security_group" "example" {
  name        = "example-sg"
  description = "Security group with HTTP access"
  vpc_id      = "vpc-0123456789abcdef0"  # Replace with your VPC ID

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "Allow HTTP traffic"
  }

  # other rules ...
}


resource "aws_lb_listener" "nlb_listener" {
  load_balancer_arn = "arn:aws:elasticloadbalancing:region:account-id:loadbalancer/net/my-nlb/1234567890abcdef"
  port              = 80
  protocol          = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = "arn:aws:elasticloadbalancing:region:account-id:targetgroup/my-target-group/abcdef1234567890"
  }
}

 couldn't get current server API group list: the server has asked for the client to provide credentials
error: You must be logged in to the server (the server has asked for the client to provide credentials)


resource "aws_lb_target_group" "nlb_tg" {
  name        = "nlb-tg"
  port        = 443
  protocol    = "TCP"
  target_type = "ip"  # or "instance"
  vpc_id      = "vpc-xxxxxxxx"
}



resource "aws_lb_target_group" "tcp_target_group" {
  name        = "my-tcp-target-group"
  port        = 80                        # Port your targets are listening on
  protocol    = "TCP"
  target_type = "instance"               # Can be 'instance', 'ip', or 'lambda'
  vpc_id      = "vpc-xxxxxxxx"           # Replace with your VPC ID

  health_check {
    protocol            = "TCP"
    port                = "traffic-port"
    interval            = 30
    timeout             = 10
    healthy_threshold   = 3
    unhealthy_threshold = 3
  }
}


resource "aws_instance" "example" {
  ami           = "ami-xxxxxxxx"   # Replace with your AMI ID
  instance_type = "t3.micro"       # Replace with your desired type

  # Required for IMDSv2
  metadata_options {
    http_endpoint            = "enabled"
    http_tokens              = "required"  # Enforces IMDSv2
    http_put_response_hop_limit = 1
  }

  tags = {
    Name = "IMDSv2-Instance"
  }
}


provider "aws" {
  region = "us-west-2"
}

resource "aws_lb_target_group" "example" {
  name        = "my-target-group"
  port        = 80
  protocol    = "HTTP"
  vpc_id      = "vpc-0abc123def456ghij"  # Replace with your VPC ID
  target_type = "ip"                    # Can be 'instance', 'ip', or 'lambda'

  health_check {
    path                = "/"
    protocol            = "HTTP"
    matcher             = "200-299"
    interval            = 30
    timeout             = 5
    healthy_threshold   = 2
    unhealthy_threshold = 2
  }
}
resource "aws_lb_listener_rule" "example" {
  listener_arn = "arn:aws:elasticloadbalancing:region:account-id:listener/app/your-lb-name/abcd1234/5678efgh" # Replace with actual listener ARN
  priority     = 100

  action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.example.arn
  }

  condition {
    path_pattern {
      values = ["/my-path*"]
    }
  }
}
