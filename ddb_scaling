resource "aws_dynamodb_table" "example" {
  name         = "example-table"
  billing_mode = "PROVISIONED"  # Autoscaling works only in PROVISIONED mode

  read_capacity  = 5
  write_capacity = 5
  hash_key       = "id"

  attribute {
    name = "id"
    type = "S"
  }

  global_secondary_index {
    name               = "example-gsi"
    hash_key           = "id"
    projection_type    = "ALL"
    read_capacity      = 5
    write_capacity     = 5
  }
}


#Enable Autoscaling for the Table


resource "aws_appautoscaling_target" "read_target" {
  max_capacity       = 20
  min_capacity       = 5
  resource_id        = "table/${aws_dynamodb_table.example.name}"
  scalable_dimension = "dynamodb:table:ReadCapacityUnits"
  service_namespace  = "dynamodb"
}

resource "aws_appautoscaling_target" "write_target" {
  max_capacity       = 20
  min_capacity       = 5
  resource_id        = "table/${aws_dynamodb_table.example.name}"
  scalable_dimension = "dynamodb:table:WriteCapacityUnits"
  service_namespace  = "dynamodb"
}

#Enable Autoscaling for Global Secondary Index (GSI)

resource "aws_appautoscaling_target" "gsi_read_target" {
  max_capacity       = 20
  min_capacity       = 5
  resource_id        = "table/${aws_dynamodb_table.example.name}/index/example-gsi"
  scalable_dimension = "dynamodb:index:ReadCapacityUnits"
  service_namespace  = "dynamodb"
}

resource "aws_appautoscaling_target" "gsi_write_target" {
  max_capacity       = 20
  min_capacity       = 5
  resource_id        = "table/${aws_dynamodb_table.example.name}/index/example-gsi"
  scalable_dimension = "dynamodb:index:WriteCapacityUnits"
  service_namespace  = "dynamodb"
}


#Define Scaling Policies
resource "aws_appautoscaling_policy" "read_policy" {
  name               = "DynamoDBReadScalingPolicy"
  policy_type        = "TargetTrackingScaling"
  resource_id        = aws_appautoscaling_target.read_target.resource_id
  scalable_dimension = aws_appautoscaling_target.read_target.scalable_dimension
  service_namespace  = aws_appautoscaling_target.read_target.service_namespace

  target_tracking_scaling_policy_configuration {
    target_value       = 70.0
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBReadCapacityUtilization"
    }
  }
}

resource "aws_appautoscaling_policy" "write_policy" {
  name               = "DynamoDBWriteScalingPolicy"
  policy_type        = "TargetTrackingScaling"
  resource_id        = aws_appautoscaling_target.write_target.resource_id
  scalable_dimension = aws_appautoscaling_target.write_target.scalable_dimension
  service_namespace  = aws_appautoscaling_target.write_target.service_namespace

  target_tracking_scaling_policy_configuration {
    target_value       = 70.0
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBWriteCapacityUtilization"
    }
  }
}


#Define Scaling Policies for GSI
resource "aws_appautoscaling_policy" "gsi_read_policy" {
  name               = "DynamoDBGSIReadScalingPolicy"
  policy_type        = "TargetTrackingScaling"
  resource_id        = aws_appautoscaling_target.gsi_read_target.resource_id
  scalable_dimension = aws_appautoscaling_target.gsi_read_target.scalable_dimension
  service_namespace  = aws_appautoscaling_target.gsi_read_target.service_namespace

  target_tracking_scaling_policy_configuration {
    target_value       = 70.0
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBReadCapacityUtilization"
    }
  }
}

resource "aws_appautoscaling_policy" "gsi_write_policy" {
  name               = "DynamoDBGSIWriteScalingPolicy"
  policy_type        = "TargetTrackingScaling"
  resource_id        = aws_appautoscaling_target.gsi_write_target.resource_id
  scalable_dimension = aws_appautoscaling_target.gsi_write_target.scalable_dimension
  service_namespace  = aws_appautoscaling_target.gsi_write_target.service_namespace

  target_tracking_scaling_policy_configuration {
    target_value       = 70.0
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBWriteCapacityUtilization"
    }
  }
}



